/*
 * This Java source file was generated by the Gradle 'init' task.
 */
/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test void someLibraryMethodReturnsTrue() {
        Library classUnderTest = new Library();
        assertTrue(classUnderTest.someLibraryMethod(), "someLibraryMethod should return 'true'");
    }


    @Test void RollTest(){
        int[] nRoll = {1,2,3,4,5,6};
        boolean flagRoll = false;

        Library classUnderTest = new Library();
        int[] testResult = Library.roll(3);

        assertEquals(3,testResult.length);
        test:
        for(int i = 0 ; i<3 ; i++)
        {
            for (int j : nRoll) {
                if (testResult[i] == j) {
                    flagRoll = true;
                    break;
                }
                flagRoll = false;
            }

            if(!flagRoll){
                break;
            }
        }
        if(!flagRoll) {
            assertEquals("array contains only number from 1 to 6", testResult);
        }
    }



    @Test void DuplicateArrayTest(){
        Library classUnderTest = new Library();
        Boolean testResult = Library.containsDuplicates(new int[]{10,5, 4, 2,7});
        assertEquals(false,testResult);

        Boolean testResult2 = Library.containsDuplicates(new int[]{6,2,8, 9, 8});
        assertEquals(true,testResult2);

        Boolean testResult3 = Library.containsDuplicates(new int[]{10,15,30, 2, 30,22});
        assertEquals(true,testResult3);

        Boolean testResult4 = Library.containsDuplicates(new int[]{2,1, 7, 9,3});
        assertEquals(false,testResult4);
    }

    @Test void AvgArrayTest(){
        Library classUnderTest = new Library();
        double testResult = Library.CalculatingAverages(new double[]{6,3,5,7,2});
        assertEquals(4.6,testResult);
        double testResult2 = Library.CalculatingAverages(new double[]{3,1,4, 1, 1,8});
        assertEquals(3,testResult2);
    }

    @Test void LowestAvgArrayTest(){
        Library classUnderTest = new Library();
        int[] testResult = Library.lowest_Average(new int[][]{
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        });
        assertArrayEquals(new int[]{55, 54, 60, 53, 59, 57, 61}, testResult);
        int[] testResult2 = Library.lowest_Average(new int[][]{
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {65, 56, 55, 52, 55, 62, 57}
        });
        assertArrayEquals(new int[]{65, 56, 55, 52, 55, 62, 57},testResult2);
    }
}
